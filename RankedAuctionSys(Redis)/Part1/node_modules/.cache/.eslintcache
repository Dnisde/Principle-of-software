[{"/Users/dnisde/Desktop/Boston University/EC500/hw1/Problem1/EC500/hw1/P1/src/index.js":"1","/Users/dnisde/Desktop/Boston University/EC500/hw1/Problem1/EC500/hw1/P1/src/reportWebVitals.js":"2","/Users/dnisde/Desktop/Boston University/EC500/hw1/Problem1/EC500/hw1/P1/src/components/App.js":"3","/Users/dnisde/Desktop/Boston University/EC500/hw1/Problem1/EC500/hw1/P1/src/components/Main.js":"4","/Users/dnisde/Desktop/Boston University/EC500/hw1/Problem1/EC500/hw1/P1/src/components/TopBar.js":"5","/Users/dnisde/Desktop/Boston University/EC500/hw1/Problem1/EC500/hw1/P1/src/components/Footer.js":"6","/Users/dnisde/Desktop/Boston University/EC500/hw1/Problem1/EC500/hw1/P1/src/components/InputBox.js":"7","/Users/dnisde/Desktop/Boston University/EC500/hw1/Problem1/EC500/hw1/P1/src/constants.js":"8","/Users/dnisde/Desktop/Boston University/EC500/hw1/Problem1/EC500/hw1/P1/src/components/md5_lib.js":"9"},{"size":503,"mtime":1665699192173,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1665699192173,"results":"12","hashOfConfig":"11"},{"size":317,"mtime":1665699192172,"results":"13","hashOfConfig":"11"},{"size":197,"mtime":1665699192173,"results":"14","hashOfConfig":"11"},{"size":313,"mtime":1665699192173,"results":"15","hashOfConfig":"11"},{"size":241,"mtime":1665699192172,"results":"16","hashOfConfig":"11"},{"size":11774,"mtime":1666159787687,"results":"17","hashOfConfig":"11"},{"size":101,"mtime":1666156863120,"results":"18","hashOfConfig":"11"},{"size":966,"mtime":1665699192173,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3rj48s",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dnisde/Desktop/Boston University/EC500/hw1/Problem1/EC500/hw1/P1/src/index.js",[],[],"/Users/dnisde/Desktop/Boston University/EC500/hw1/Problem1/EC500/hw1/P1/src/reportWebVitals.js",[],[],"/Users/dnisde/Desktop/Boston University/EC500/hw1/Problem1/EC500/hw1/P1/src/components/App.js",[],[],"/Users/dnisde/Desktop/Boston University/EC500/hw1/Problem1/EC500/hw1/P1/src/components/Main.js",[],[],"/Users/dnisde/Desktop/Boston University/EC500/hw1/Problem1/EC500/hw1/P1/src/components/TopBar.js",[],[],"/Users/dnisde/Desktop/Boston University/EC500/hw1/Problem1/EC500/hw1/P1/src/components/Footer.js",[],[],"/Users/dnisde/Desktop/Boston University/EC500/hw1/Problem1/EC500/hw1/P1/src/components/InputBox.js",["48","49"],[],"import React, { useState } from 'react';\nimport { Input, message, InputNumber } from 'antd';\nimport axios from 'axios';\nimport MD5 from \"./md5_lib\"\nimport { REDIS_URL } from \"../constants\";\nimport { SALT } from '../constants';\n\nfunction InputBox() {\n\n    /** \n     * Initialize View and Submit Button as disabled: \n     * When verify_status is: FALSE, \n     * and disable the Submit and View of the Action Rank;\n     */ \n    const [verify_status, setVerifyStatus] = useState(false);\n    var sum_status;\n    var func = function() {\n\n        sum_status = false;\n        console.log(\"Verify status initialized as:\", verify_status);\n        console.log(\"Sum status initialized as:\", sum_status);\n        func = function(){};\n    }\n    func();\n\n    // Update sum of scores everytime number is changed, \n    // and Get sum of scores depends on the Input.\n    const UpdateSum = () => {\n        var sum = 0;\n        for (var i = 0; i < 5; i++) {\n            var score = document.getElementById(\"git\" + i).value;\n            if (score === '') {\n                score = 0;\n            }\n            sum += parseInt(score);\n        }\n\n        // Set submit-button availability: \n        if (sum > 100 || sum < 0){\n            message.error(\"Total score must be smaller than 100!\");\n            document.getElementById(\"sum\").value = \"Check Score\";\n            sum_status = false;\n        } \n        else {\n            // For User friendly, without Raised an error when Sum != 100.\n            if (sum === 100){\n                sum_status = true;\n            } \n            else {\n                sum_status = false;\n            }\n            console.log(sum);\n            document.getElementById(\"sum\").value = sum;\n            \n        }\n    }\n    \n    // Verify that if the user has the authentication to view and edit the Auction Rank;\n    const Verify = async() => {\n\n        const password = document.getElementById(\"password\").value;\n        var new_md5 = new MD5(SALT + password);\n        const hash_verify = new_md5.md5;\n    \n        //interaction with redis backend\n        const opt = {\n            method: 'GET',\n            url: REDIS_URL + '?salt=' + SALT + '&hash=' + hash_verify + '&message=' + 'GET server:name',\n            headers: { 'content-type': 'application/json'}\n        };\n    \n        await axios(opt)\n            .then( response => {\n                console.log('Request sent to Redis: ', opt)\n                console.log(response.data)\n                if(response.status === 200) {\n                    \n                    if (!response.data || response.data.length === 0) {\n                        message.error('Password Incorrect');\n                        setVerifyStatus(false);\n                    }\n                    else {\n                        message.success('Verify succeed!');\n                        localStorage.setItem(\"hash_pass\", hash_verify);\n                        setVerifyStatus(true);\n                    }\n                }\n            })\n            .catch( error => {\n                console.log(error.message);\n            })\n\n    };\n\n    const Logout = () => {\n        setVerifyStatus(false);\n        message.info(\"Logged Out!\");\n    }\n\n    const Submit = () => {\n        \n        console.log(\"Sum status:\", sum_status);\n\n        if (sum_status === true) {\n\n            var name = document.getElementById(\"wiki-name\");\n            const hash = localStorage.getItem(\"hash_pass\");\n\n            if (name.value === '') {\n                message.error(\"Name must not be empty!\");\n            } \n            else {\n                //generate message with scores and wiki-name\n                var command = 'HMSET user:' + name.value;\n\n                for (var i = 0; i < 5; i++) {\n                    var score = document.getElementById(\"git\" + i).value;\n                    if (score === '') {\n                        score = 0;\n                    }\n                    console.log(score);\n                    command += ' git' + i + ' ' + score;\n                }\n                console.log(command)\n\n                //interaction with redis backend\n                const opt = {\n                    method: 'GET',\n                    url: REDIS_URL + '?salt=' + SALT + '&hash=' + hash + '&message=' + command,\n                    headers: { 'content-type': 'application/json'}\n                };\n                \n                axios(opt)\n                    .then( response => {\n                        console.log('Request sent to Redis: ', opt)\n                        console.log(response.data)\n                        if(response.status === 200) {\n                            if (!response.data || response.data.length === 0) {\n                                message.error('Submit Fail!');\n                            }\n                            else {\n                                message.success('Submit Succeed!');\n                            }\n\n                        }\n                    })\n                    .catch( error => {\n                        console.log(error.message);\n                        message.error('Submit Fail!');\n                    })\n            }\n        } else {\n            message.error(\"Total Score must be 100!\");\n        }\n    };\n\n    // View data function\n    // Use async..await structure to enable passing the value out from axios.\n    const ViewData = async() => {\n\n        var name = document.getElementById(\"wiki-name\");\n\n        const hash = localStorage.getItem(\"hash_pass\");\n\n        if (name.value === '') {\n            message.error(\"Name must not be empty!\");\n        } else {\n            // Add 1 to flag everytime data is returned successfully\n            let flag = 0;\n            let sum = 0;\n\n            for (var i = 0; i < 5; i++) {\n                var command = 'HGET user:' + name.value + ' git' + i;\n                const opt = {\n                    method: 'GET',\n                    url: REDIS_URL + '?salt=' + SALT + '&hash=' + hash + '&message=' + command,\n                    headers: { 'content-type': 'application/json'}\n                };\n                let score;\n                await axios(opt)\n                    .then( response => {\n                        console.log('Request sent to Redis: ', opt)\n                        score = response.data.toLocaleString().slice(43)\n                        if(response.status === 200) {\n                            if (response.data && response.data.length !== 0) {\n                                flag++;\n                            }\n                        }\n                    })\n                    .catch( error => {\n                        console.log(error.message);\n                        message.error('View Request Fail');\n                    })\n                console.log(score)\n                document.getElementById(\"git\" + i).value = score;\n                sum += parseInt(score);\n            }\n            if (flag === 5) {\n                message.success(\"View Request Succeed\")\n                document.getElementById(\"sum\").value = sum;\n            }\n            else {\n                message.error(\"View Request Fail\")\n            }\n        }\n    }\n    \n    return (\n        <div>             \n            <div>\n              <Input.Password\n                placeholder=\"Your Password\" \n                name=\"password\"\n                id=\"password\"\n                label=\"Password\"\n                className=\"pass-word\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your password',\n                    },\n                ]}/>\n            </div>\n\n            {\n                verify_status ?\n                    null\n                    :\n                    <button\n                        onClick={Verify}\n                        id=\"verity-btn\"\n                        className=\"verify-btn\">\n                        Verify\n                    </button>\n            }\n\n            {\n                verify_status ?\n                    <button\n                        onClick={Logout}\n                        id=\"logout-btn\"\n                        className=\"logout-btn\">\n                        Logout\n                    </button>\n                    :\n                    null\n            }\n\n            {\n                verify_status ?\n                    <h1 className=\"authorized-message\">\n                        Authorized!\n                    </h1>\n                    :\n                    <h1 className=\"unauthorized-message\">\n                        Unauthorized!\n                    </h1>\n            }\n\n            <div>\n                <h1 className=\"rank-title\">\n                    Auction Rank:\n                </h1>\n            </div>\n\n            <div>\n                <input\n                    type=\"text\"\n                    placeholder=\"Enter Wikiname\"\n                    id=\"wiki-name\"\n                    className=\"wiki-name\"\n                />\n            </div>\n\n            <div>\n                <InputNumber\n                    defaultValue={0}\n                    readOnly={true}\n                    addonBefore=\"Sum\"\n                    id=\"sum\"\n                    className=\"sum\"\n                />\n            </div>\n\n            <div>\n                <InputNumber\n                    min={0}\n                    max={99}\n                    defaultValue={0}\n                    controls={false}\n                    addonBefore=\"Git0\"\n                    id=\"git0\"\n                    onChange={UpdateSum}\n                    className=\"rank-table\"\n                />\n            </div>\n\n            <div>\n                <InputNumber\n                    min={0}\n                    max={99}\n                    defaultValue={0}\n                    controls={false}\n                    addonBefore=\"Git1\"\n                    id=\"git1\"\n                    onChange={UpdateSum}\n                    className=\"rank-table\"\n                />\n            </div>\n\n            <div>\n                <InputNumber\n                    min={0}\n                    max={99}\n                    defaultValue={0}\n                    controls={false}\n                    addonBefore=\"Git2\"\n                    id=\"git2\"\n                    onChange={UpdateSum}\n                    className=\"rank-table\"\n                    label=\"123\"\n                />\n            </div>\n\n            <div>\n                <InputNumber\n                    min={0}\n                    max={99}\n                    defaultValue={0}\n                    controls={false}\n                    addonBefore=\"Git3\"\n                    id=\"git3\"\n                    onChange={UpdateSum}\n                    className=\"rank-table\"\n                />\n            </div>\n\n            <div>\n                <InputNumber\n                    min={0}\n                    max={99}\n                    defaultValue={0}\n                    controls={false}\n                    addonBefore=\"Git4\"\n                    id=\"git4\"\n                    onChange={UpdateSum}\n                    className=\"rank-table\"\n                />\n            </div>\n\n            <div>\n                <button\n                    onClick={Submit}\n                    disabled={verify_status ? false : true}\n                    id=\"submit-btn\"\n                    className=\"submit-btn\">\n                    Submit\n                </button>\n            </div>\n\n            <div>\n                <button\n                    onClick={ViewData}\n                    disabled={verify_status ? false : true}\n                    id=\"view-btn\"\n                    className=\"view-btn\">\n                    View\n                </button>\n            </div>\n            \n        </div>\n    );\n}\n\nexport default InputBox;","/Users/dnisde/Desktop/Boston University/EC500/hw1/Problem1/EC500/hw1/P1/src/constants.js",[],[],"/Users/dnisde/Desktop/Boston University/EC500/hw1/Problem1/EC500/hw1/P1/src/components/md5_lib.js",[],[],{"ruleId":"50","severity":1,"message":"51","line":68,"column":85,"nodeType":"52","messageId":"53","endLine":68,"endColumn":86},{"ruleId":"54","severity":1,"message":"55","line":181,"column":28,"nodeType":"56","messageId":"57","endLine":189,"endColumn":22},"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'flag'.","ArrowFunctionExpression","unsafeRefs"]